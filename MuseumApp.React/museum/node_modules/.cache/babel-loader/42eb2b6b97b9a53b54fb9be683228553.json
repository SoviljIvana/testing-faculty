{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\ExhibitAction\\\\AddExhibit.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\nimport { YearPicker } from 'react-dropdown-date';\n\nclass AddExhibit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exhibitId: 0,\n      exhibitionId: 0,\n      name: '',\n      year: 0,\n      picturePath: '',\n      auditoriumId: 0,\n      nameError: '',\n      submitted: false,\n      canSubmit: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      id,\n      value\n    } = e.target;\n    this.setState({\n      [id]: value\n    });\n    this.validate(id, value);\n  }\n\n  validate(id, value) {\n    if (id === 'name') {\n      if (value === '') {\n        this.setState({\n          nameError: 'Unesite naziv.',\n          canSubmit: false\n        });\n      } else {\n        this.setState({\n          nameError: '',\n          canSubmit: true\n        });\n      }\n    }\n\n    if (id === 'year') {\n      const yearNum = +value;\n\n      if (!value || value === '' || yearNum < 1895 || yearNum > 2100) {\n        this.setState({\n          yearError: 'Molim vas unesite validnu godinu.'\n        });\n      } else {\n        this.setState({\n          yearError: ''\n        });\n      }\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      name,\n      year,\n      picturePath\n    } = this.state;\n\n    if (name && year && picturePath) {\n      this.newExhibit();\n    } else {\n      NotificationManager.error('Unesite podatak.');\n      this.setState({\n        submitted: false\n      });\n    }\n  }\n\n  handleYearChange(year) {\n    this.setState({\n      year: year\n    });\n    this.validate('year', year);\n  }\n\n  newExhibit() {\n    const {\n      exhibitId,\n      exhibitionId,\n      name,\n      year,\n      picturePath,\n      auditoriumId\n    } = this.state;\n    const data = {\n      ExhibitId: +exhibitId,\n      ExhibitionId: +exhibitionId,\n      Name: name,\n      Year: +year,\n      picturePath: picturePath,\n      auditoriumId: +auditoriumId\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(`${serviceConfig.baseURL}/api/exhibits/post`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.statusText;\n    }).then(result => {\n      NotificationManager.success('UspeÅ¡no dodat eksponat!');\n      this.props.history.push(`ShowAllExhibits`);\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      exhibitId,\n      name,\n      year,\n      picturePath,\n      exhibitionId,\n      auditoriumId,\n      submitted,\n      nameError,\n      yearError,\n      canSubmit\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"naziv\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, nameError)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(YearPicker, {\n      defaultValue: 'Select Year',\n      start: 1895,\n      end: 2100,\n      reverse: true,\n      required: true,\n      disabled: false,\n      value: year,\n      onChange: year => {\n        this.handleYearChange(year);\n      },\n      id: 'year',\n      name: 'year',\n      classes: 'form-control',\n      optionClasses: 'option classes',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, yearError)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"picturePath\",\n      type: \"text\",\n      placeholder: \"putanja do slike\",\n      value: picturePath,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"exhibitionId\",\n      type: \"number\",\n      placeholder: \"id izlo\\u017Ebe\",\n      value: exhibitionId,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"auditoriumId\",\n      type: \"number\",\n      placeholder: \"id sale\",\n      value: auditoriumId,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"exhibitId\",\n      type: \"number\",\n      placeholder: \"id eksponata\",\n      value: exhibitId,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      type: \"submit\",\n      disabled: submitted || !canSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"Dodaj eksponat\")))));\n  }\n\n}\n\nexport default withRouter(AddExhibit);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/ExhibitAction/AddExhibit.jsx"],"names":["React","withRouter","FormGroup","FormControl","Button","Container","Row","Col","FormText","NotificationManager","serviceConfig","YearPicker","AddExhibit","Component","constructor","props","state","exhibitId","exhibitionId","name","year","picturePath","auditoriumId","nameError","submitted","canSubmit","handleChange","bind","handleSubmit","handleYearChange","e","id","value","target","setState","validate","yearNum","yearError","preventDefault","newExhibit","error","data","ExhibitId","ExhibitionId","Name","Year","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","fetch","baseURL","then","response","ok","Promise","reject","statusText","result","success","history","push","catch","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText, } from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\nimport { YearPicker } from 'react-dropdown-date';\r\n\r\nclass AddExhibit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exhibitId: 0,\r\n            exhibitionId: 0,\r\n            name: '',\r\n            year: 0,\r\n            picturePath: '',\r\n            auditoriumId: 0,\r\n            nameError: '',\r\n            submitted: false,\r\n            canSubmit: true\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleYearChange = this.handleYearChange.bind(this);\r\n    }\r\n\r\n    \r\n    handleChange(e) {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n        this.validate(id, value);\r\n\r\n    }\r\n\r\n    validate(id, value) {\r\n        if (id === 'name') {\r\n            if (value === '') {\r\n                this.setState({nameError: 'Unesite naziv.',\r\n                                canSubmit: false});\r\n            } else {\r\n                this.setState({nameError: '',\r\n                                canSubmit: true});\r\n            }\r\n        }\r\n\r\n        if(id === 'year') {\r\n            const yearNum = +value;\r\n            if(!value || value === '' || (yearNum<1895 || yearNum>2100)){\r\n                this.setState({yearError: 'Molim vas unesite validnu godinu.'});\r\n            } else {\r\n                this.setState({yearError: ''});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { name, year, picturePath} = this.state;\r\n        if (name && year && picturePath ) {\r\n            this.newExhibit();\r\n        } else {\r\n            NotificationManager.error('Unesite podatak.');\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    handleYearChange(year) {\r\n        this.setState({year: year});\r\n        this.validate('year', year);\r\n    }\r\n\r\n    newExhibit() {\r\n        const { exhibitId,exhibitionId, name, year, picturePath, auditoriumId} = this.state;\r\n\r\n        const data = {\r\n            ExhibitId: +exhibitId,\r\n            ExhibitionId: +exhibitionId,\r\n            Name: name,\r\n            Year: +year,\r\n            picturePath : picturePath,\r\n            auditoriumId: +auditoriumId,\r\n           \r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        fetch(`${serviceConfig.baseURL}/api/exhibits/post`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.statusText;\r\n            })\r\n            .then(result => {\r\n                NotificationManager.success('UspeÅ¡no dodat eksponat!');\r\n                this.props.history.push(`ShowAllExhibits`);\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {exhibitId, name, year, picturePath, exhibitionId, auditoriumId,  submitted, nameError, yearError, canSubmit } = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"naziv\"\r\n                                    value={name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <FormText className=\"text-danger\">{nameError}</FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <YearPicker\r\n                                    defaultValue={'Select Year'}\r\n                                    start={1895}\r\n                                    end={2100}\r\n                                    reverse\r\n                                    required={true}\r\n                                    disabled={false}\r\n                                    value={year}\r\n                                    onChange={(year) => {\r\n                                        this.handleYearChange(year);\r\n                                    }}\r\n                                    id={'year'}\r\n                                    name={'year'}\r\n                                    classes={'form-control'}\r\n                                    optionClasses={'option classes'}\r\n                                />\r\n                                <FormText className=\"text-danger\">{yearError}</FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"picturePath\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"putanja do slike\"\r\n                                    value={picturePath}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"exhibitionId\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"id izloÅ¾be\"\r\n                                    value={exhibitionId}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                          </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"auditoriumId\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"id sale\"\r\n                                    value={auditoriumId}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"exhibitId\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"id eksponata\"\r\n                                    value={exhibitId}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button  variant=\"info\" type=\"submit\" disabled={submitted || !canSubmit} block>Dodaj eksponat</Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddExhibit);"]},"metadata":{},"sourceType":"module"}