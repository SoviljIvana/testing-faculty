{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\MuseumActions\\\\EditMuseum.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass EditMuseum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      museumId: 0,\n      name: '',\n      streetAndNumber: '',\n      city: '',\n      email: '',\n      phoneNumber: '',\n      submitted: false,\n      canSubmit: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getMuseum(id);\n  }\n\n  getMuseum(museumId) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/museums/get/` + museumId, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          museumId: data.museumId,\n          name: data.name,\n          streetAndNumber: data.streetAndNumber,\n          city: data.city,\n          email: data.email,\n          phoneNumber: data.phoneNumber\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  handleChange(e) {\n    const {\n      id,\n      value\n    } = e.target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      museumId,\n      name,\n      streetAndNumber,\n      city,\n      email,\n      phoneNumber\n    } = this.state;\n\n    if (museumId && name && streetAndNumber && city && email && phoneNumber) {\n      this.updateMuseum();\n    } else {\n      NotificationManager.error('Unesite podatke u polje');\n      this.setState({\n        submitted: false\n      });\n    }\n  }\n\n  updateMuseum() {\n    const {\n      museumId,\n      name,\n      streetAndNumber,\n      city,\n      email,\n      phoneNumber\n    } = this.state;\n    const data = {\n      museumId: museumId,\n      name: name,\n      streetAndNumber: streetAndNumber,\n      city: city,\n      email: email,\n      phoneNumber: phoneNumber\n    };\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\n    fetch(`${serviceConfig.baseURL}/api/museums/${museumId}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.statusText;\n    }).then(data => {\n      if (data) {\n        this.setState({\n          name: data.name,\n          streetAndNumber: data.streetAndNumber,\n          city: data.city,\n          email: data.email,\n          phoneNumber: data.phoneNumber\n        });\n      }\n    }).then(result => {\n      this.props.history.goBack();\n      NotificationManager.success('Uspešno izmenjen muzej!');\n    }).catch(response => {\n      NotificationManager.error(\"Ne možete izmeniti podatke o muzeju. \");\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      streetAndNumber,\n      city,\n      email,\n      phoneNumber,\n      canSubmit,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"naziv\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"streetAndNumber\",\n      type: \"text\",\n      placeholder: \"ulica i broj\",\n      value: streetAndNumber,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"city\",\n      type: \"text\",\n      placeholder: \"grad\",\n      value: city,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"email\",\n      type: \"text\",\n      placeholder: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"phoneNumber\",\n      type: \"text\",\n      placeholder: \"broj telefona\",\n      value: phoneNumber,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      disabled: submitted || !canSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, \"Izmeni podatke o muzeju\")))));\n  }\n\n}\n\nexport default withRouter(EditMuseum);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/MuseumActions/EditMuseum.jsx"],"names":["React","withRouter","FormGroup","FormControl","Button","Container","Row","Col","FormText","NotificationManager","serviceConfig","EditMuseum","Component","constructor","props","state","museumId","name","streetAndNumber","city","email","phoneNumber","submitted","canSubmit","handleChange","bind","handleSubmit","componentDidMount","id","match","params","getMuseum","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","catch","error","message","statusText","e","value","target","preventDefault","updateMuseum","body","JSON","stringify","console","log","result","history","goBack","success","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText, } from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\n\r\nclass EditMuseum extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            museumId: 0,\r\n            name: '',\r\n            streetAndNumber: '',\r\n            city: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            submitted: false,\r\n            canSubmit: true\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params; \r\n        this.getMuseum(id);\r\n    }\r\n    getMuseum(museumId) {   \r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n            \r\n        };\r\n    \r\n        fetch(`${serviceConfig.baseURL}/api/museums/get/` + museumId, requestOptions)\r\n            .then(response => {\r\n            if (!response.ok) {\r\n                return Promise.reject(response);\r\n            }\r\n            return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({museumId: data.museumId,\r\n                        name: data.name,\r\n                        streetAndNumber: data.streetAndNumber,\r\n                        city: data.city,\r\n                        email: data.email,\r\n                        phoneNumber: data.phoneNumber});\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n        }\r\n    handleChange(e) {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n      \r\n            }\r\n\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const {museumId, name, streetAndNumber, city, email, phoneNumber} = this.state;\r\n        if (museumId && name && streetAndNumber && city && email && phoneNumber) {\r\n            this.updateMuseum();\r\n        } else {\r\n            NotificationManager.error('Unesite podatke u polje');\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n \r\n    updateMuseum() {\r\n\r\n        const {museumId, name, streetAndNumber, city, email, phoneNumber} = this.state;\r\n        const data = {\r\n            museumId: museumId,\r\n            name: name,\r\n            streetAndNumber: streetAndNumber,\r\n            city: city,\r\n            email: email,\r\n            phoneNumber: phoneNumber\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n           \r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\r\n        \r\n        fetch(`${serviceConfig.baseURL}/api/museums/${museumId}`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.statusText;\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    this.setState({\r\n                        name: data.name,\r\n                        streetAndNumber: data.streetAndNumber,\r\n                        city: data.city,\r\n                        email: data.email,\r\n                        phoneNumber: data.phoneNumber\r\n                    });\r\n                }\r\n            })\r\n            .then(result => {\r\n                this.props.history.goBack();\r\n                NotificationManager.success('Uspešno izmenjen muzej!');\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(\"Ne možete izmeniti podatke o muzeju. \");\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { name, streetAndNumber, city, email, phoneNumber, canSubmit , submitted} = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                        \r\n                            <FormGroup>\r\n                                <FormControl\r\n                                \r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"naziv\"\r\n                                    value={name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                \r\n                                    id=\"streetAndNumber\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"ulica i broj\"\r\n                                    value={streetAndNumber}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"city\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"grad\"\r\n                                    value={city}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"email\"\r\n                                    value={email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"phoneNumber\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"broj telefona\"\r\n                                    value={phoneNumber}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                           \r\n                            <Button  variant=\"danger\" type=\"submit\" disabled={submitted || !canSubmit} block>Izmeni podatke o muzeju</Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(EditMuseum);"]},"metadata":{},"sourceType":"module"}