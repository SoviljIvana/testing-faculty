{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\ExhibitionActions\\\\AddExhibition.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormGroup, FormControl, Button, Container, Row, Col } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass AddExhibition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exhibitionId: 0,\n      exhibitionName: '',\n      auditoriumId: 0,\n      typeOfExhibition: '',\n      startTime: '',\n      endTime: '',\n      submitted: false,\n      canSubmit: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      id,\n      value\n    } = e.target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      exhibitionName,\n      typeOfExhibition\n    } = this.state;\n\n    if (exhibitionName && typeOfExhibition) {\n      this.newExhibition();\n    } else {\n      NotificationManager.error('Popunite polje');\n      this.setState({\n        submitted: false\n      });\n    }\n  }\n\n  newExhibition() {\n    const {\n      exhibitionId,\n      exhibitionName,\n      auditoriumId,\n      typeOfExhibition,\n      startTime,\n      endTime\n    } = this.state;\n    const data = {\n      ExhibitionId: +exhibitionId,\n      ExhibitionName: exhibitionName,\n      AuditoriumId: +auditoriumId,\n      TypeOfExhibition: typeOfExhibition,\n      StartTime: startTime,\n      EndTime: endTime\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(`${serviceConfig.baseURL}/api/exhibitions/post`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.statusText;\n    }).then(result => {\n      NotificationManager.success('Uspešno dodata izložba!');\n      this.props.history.push(`ShowAllExhibitions`);\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      exhibitionId,\n      exhibitionName,\n      auditoriumId,\n      typeOfExhibition,\n      startTime,\n      endTime,\n      submitted,\n      canSubmit\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      class: \"new-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"exhibitionName\",\n      type: \"text\",\n      placeholder: \"naziv izlo\\u017Ebe\",\n      value: exhibitionName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"typeOfExhibition\",\n      type: \"text\",\n      placeholder: \"tip izlo\\u017Ebe\",\n      value: typeOfExhibition,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"exhibitionId\",\n      type: \"number\",\n      placeholder: \"id izlo\\u017Ebe\",\n      value: exhibitionId,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"auditoriumId\",\n      type: \"number\",\n      placeholder: \"id sale\",\n      value: auditoriumId,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"startTime\",\n      type: \"date\",\n      placeholder: \"po\\u010Detak\",\n      value: startTime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"endTime\",\n      type: \"date\",\n      placeholder: \"kraj\",\n      value: endTime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      type: \"submit\",\n      disabled: submitted || !canSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"Dodaj izlo\\u017Ebu\")))));\n  }\n\n}\n\nexport default withRouter(AddExhibition);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/ExhibitionActions/AddExhibition.jsx"],"names":["React","withRouter","FormGroup","FormControl","Button","Container","Row","Col","NotificationManager","serviceConfig","AddExhibition","Component","constructor","props","state","exhibitionId","exhibitionName","auditoriumId","typeOfExhibition","startTime","endTime","submitted","canSubmit","handleChange","bind","handleSubmit","e","id","value","target","setState","preventDefault","newExhibition","error","data","ExhibitionId","ExhibitionName","AuditoriumId","TypeOfExhibition","StartTime","EndTime","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","fetch","baseURL","then","response","ok","Promise","reject","statusText","result","success","history","push","catch","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button, Container, Row, Col} from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\n\r\nclass AddExhibition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exhibitionId: 0,\r\n            exhibitionName: '',\r\n            auditoriumId: 0,\r\n            typeOfExhibition: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            submitted: false,\r\n            canSubmit: true\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const { exhibitionName, typeOfExhibition} = this.state;\r\n        if (exhibitionName && typeOfExhibition) {\r\n            this.newExhibition();\r\n        } else {\r\n            NotificationManager.error('Popunite polje');\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    newExhibition() {\r\n        const {exhibitionId, exhibitionName, auditoriumId, typeOfExhibition, startTime, endTime} = this.state;\r\n\r\n        const data = {\r\n            ExhibitionId: +exhibitionId,\r\n            ExhibitionName: exhibitionName,\r\n            AuditoriumId: +auditoriumId,\r\n            TypeOfExhibition: typeOfExhibition,\r\n            StartTime : startTime,\r\n            EndTime: endTime,\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n           ,\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        fetch(`${serviceConfig.baseURL}/api/exhibitions/post`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.statusText;\r\n            })\r\n            .then(result => {\r\n                NotificationManager.success('Uspešno dodata izložba!');\r\n                this.props.history.push(`ShowAllExhibitions`);\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {exhibitionId, exhibitionName, auditoriumId, typeOfExhibition, startTime, endTime,  submitted, canSubmit } = this.state;\r\n        return (\r\n            <Container>\r\n                <Row  class = \"new-row\">\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"exhibitionName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"naziv izložbe\"\r\n                                    value={exhibitionName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                           \r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"typeOfExhibition\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"tip izložbe\"\r\n                                    value={typeOfExhibition}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"exhibitionId\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"id izložbe\"\r\n                                    value={exhibitionId}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                          </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"auditoriumId\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"id sale\"\r\n                                    value={auditoriumId}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"startTime\"\r\n                                    type=\"date\"\r\n                                    placeholder=\"početak\"\r\n                                    value={startTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"endTime\"\r\n                                    type=\"date\"\r\n                                    placeholder=\"kraj\"\r\n                                    value={endTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button  variant=\"info\" type=\"submit\" disabled={submitted || !canSubmit} block>Dodaj izložbu</Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddExhibition);"]},"metadata":{},"sourceType":"module"}