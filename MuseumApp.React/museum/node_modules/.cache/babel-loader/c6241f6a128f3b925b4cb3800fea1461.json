{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\UserActions\\\\ShowAllUsers.jsx\";\nimport React, { Component } from 'react';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\nimport { Row, Table, Button } from 'react-bootstrap';\nimport Spinner from '../Spinner';\n\nclass ShowAllUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      isLoading: true\n    };\n    this.userDetails = this.userDetails.bind(this);\n    this.editUser = this.editUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    this.setState({\n      isLoading: true\n    });\n    fetch(`${serviceConfig.baseURL}/api/Users/get`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          users: data,\n          isLoading: false\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  fillTableWithDaata() {\n    return this.state.users.map(user => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, user.firstName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, user.lastName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, user.username), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, user.yearOfBirth), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        width: \"1%\",\n        className: \"text-center cursor-pointer\",\n        onClick: () => this.userDetails(user.userId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, \"vidi detalje\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        width: \"1%\",\n        className: \"text-center cursor-pointer\",\n        onClick: () => this.editUser(user.userId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }, \"izmeni\")));\n    });\n  }\n\n  editUser(id) {\n    this.props.history.push(`edituser/${id}`);\n  }\n\n  userDetails(id) {\n    this.props.history.push(`userDetails/${id}`);\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const rowsData = this.fillTableWithDaata();\n    const table = /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      striped: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Ime\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Prezime\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 30\n      }\n    }, \"Korisni\\u010Dko ime\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Datum ro\\u0111enja\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Email adresa\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Detalji\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Izmena\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, rowsData));\n    const showTable = isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }\n    }) : table;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, showTable));\n  }\n\n}\n\nexport default ShowAllUsers;","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/UserActions/ShowAllUsers.jsx"],"names":["React","Component","NotificationManager","serviceConfig","Row","Table","Button","Spinner","ShowAllUsers","constructor","props","state","users","isLoading","userDetails","bind","editUser","componentDidMount","getUsers","requestOptions","method","headers","localStorage","getItem","setState","fetch","baseURL","then","response","ok","Promise","reject","json","data","catch","error","message","statusText","fillTableWithDaata","map","user","id","firstName","lastName","username","yearOfBirth","email","userId","history","push","render","rowsData","table","showTable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAoC;AAEhCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL;AACH;;AAEDA,EAAAA,QAAQ,GAAE;AACN,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFxB;AAFU,KAAvB;AAOI,SAAKC,QAAL,CAAc;AAACX,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACAY,IAAAA,KAAK,CAAE,GAAEtB,aAAa,CAACuB,OAAQ,gBAA1B,EAA2CP,cAA3C,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,eAAOC,OAAO,CAACC,MAAR,CAAeH,QAAf,CAAP;AACH;;AACD,aAAOA,QAAQ,CAACI,IAAT,EAAP;AACC,KANH,EAOGL,IAPH,CAOQM,IAAI,IAAI;AACZ,UAAIA,IAAJ,EAAU;AACR,aAAKT,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAEqB,IADG;AAETpB,UAAAA,SAAS,EAAE;AAFF,SAAd;AAGC;AACJ,KAbH,EAcGqB,KAdH,CAcSN,QAAQ,IAAI;AACf1B,MAAAA,mBAAmB,CAACiC,KAApB,CAA0BP,QAAQ,CAACQ,OAAT,IAAoBR,QAAQ,CAACS,UAAvD;AACA,WAAKb,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAjBH;AAkBP;;AAGDyB,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAK3B,KAAL,CAAWC,KAAX,CAAiB2B,GAAjB,CAAqBC,IAAI,IAAI;AAChC,0BAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,SAAV,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,QAAV,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,QAAV,CAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACK,WAAV,CAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAI,CAACM,KAAV,CALG,eAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAM,oBAAC,MAAD;AAAS,QAAA,OAAO,EAAC,MAAjB;AAAyB,QAAA,KAAK,EAAG,IAAjC;AAAsC,QAAA,SAAS,EAAC,4BAAhD;AAA6E,QAAA,OAAO,EAAI,MAAM,KAAKhC,WAAL,CAAiB0B,IAAI,CAACO,MAAtB,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAN,CANG,eAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAM,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAwB,QAAA,KAAK,EAAG,IAAhC;AAAqC,QAAA,SAAS,EAAC,4BAA/C;AAA4E,QAAA,OAAO,EAAI,MAAM,KAAK/B,QAAL,CAAcwB,IAAI,CAACO,MAAnB,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,CAPG,CAAP;AASP,KAVU,CAAP;AAWH;;AAED/B,EAAAA,QAAQ,CAACyB,EAAD,EAAK;AACT,SAAK/B,KAAL,CAAWsC,OAAX,CAAmBC,IAAnB,CAAyB,YAAWR,EAAG,EAAvC;AACH;;AAED3B,EAAAA,WAAW,CAAC2B,EAAD,EAAI;AACX,SAAK/B,KAAL,CAAWsC,OAAX,CAAmBC,IAAnB,CAAyB,eAAcR,EAAG,EAA1C;AACC;;AAELS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACrC,MAAAA;AAAD,QAAc,KAAKF,KAAzB;AACA,UAAMwC,QAAQ,GAAG,KAAKb,kBAAL,EAAjB;AACA,UAAMc,KAAK,gBAAI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,UAAU,MAAxC;AAAyC,MAAA,OAAO,MAAhD;AAAiD,MAAA,OAAO,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHD,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,CADL,eAYK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,QADL,CAZL,CAAf;AAgBA,UAAME,SAAS,GAAGxC,SAAS,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAyBuC,KAApD;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,SADL,CADJ,CADJ;AAOH;;AA/F+B;;AAiGpC,eAAe7C,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\nimport { Row, Table, Button } from 'react-bootstrap';\r\nimport Spinner from '../Spinner';\r\n\r\nclass ShowAllUsers extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            isLoading: true,\r\n        }\r\n        this.userDetails = this.userDetails.bind(this); \r\n        this.editUser = this.editUser.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUsers();\r\n    }\r\n\r\n    getUsers(){\r\n        const requestOptions = {\r\n            method: 'GET' ,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n           };\r\n            this.setState({isLoading: true});\r\n            fetch(`${serviceConfig.baseURL}/api/Users/get`, requestOptions)\r\n              .then(response => {\r\n                if (!response.ok) {\r\n                  return Promise.reject(response);\r\n              }\r\n              return response.json();\r\n              })\r\n              .then(data => {\r\n                if (data) {\r\n                  this.setState({ \r\n                      users: data,\r\n                       isLoading: false });\r\n                  }\r\n              })\r\n              .catch(response => {\r\n                  NotificationManager.error(response.message || response.statusText);\r\n                  this.setState({ isLoading: false });\r\n              });\r\n    }\r\n\r\n  \r\n    fillTableWithDaata() {\r\n        return this.state.users.map(user => {\r\n            return <tr key={user.id}>\r\n                <td>{user.firstName}</td>\r\n                <td>{user.lastName}</td>  \r\n                <td>{user.username}</td>  \r\n                <td>{user.yearOfBirth}</td>  \r\n                <td>{user.email}</td>    \r\n                <td>  <Button  variant=\"dark\"  width = \"1%\" className=\"text-center cursor-pointer\" onClick = {() => this.userDetails(user.userId)}>vidi detalje</Button></td> \r\n                <td>  <Button variant=\"dark\"  width = \"1%\" className=\"text-center cursor-pointer\" onClick = {() => this.editUser(user.userId)}>izmeni</Button></td> \r\n</tr>\r\n    })\r\n    }\r\n\r\n    editUser(id) {\r\n        this.props.history.push(`edituser/${id}`);\r\n    }\r\n\r\n    userDetails(id){\r\n        this.props.history.push(`userDetails/${id}`);\r\n        }\r\n\r\n    render(){\r\n        const {isLoading} = this.state;\r\n        const rowsData = this.fillTableWithDaata();\r\n        const table = (<Table striped bordered hover responsive striped variant=\"dark\">\r\n                            <thead>\r\n                            <th>Ime</th>\r\n                            <th>Prezime</th>\r\n                             <th>Korisničko ime</th>\r\n                         \r\n                            <th>Datum rođenja</th>\r\n                            <th>Email adresa</th>\r\n                            <th>Detalji</th>\r\n                            <th>Izmena</th>\r\n                          \r\n                            </thead>\r\n                            <tbody>\r\n                                {rowsData}\r\n                            </tbody>\r\n                        </Table>);\r\n        const showTable = isLoading ? <Spinner></Spinner> : table;\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    {showTable}\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ShowAllUsers;"]},"metadata":{},"sourceType":"module"}