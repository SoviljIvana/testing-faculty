{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\privateRouteAdmin.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { NotificationManager } from 'react-notifications';\nimport * as authCheck from './authCheck.js';\nexport const PrivateRouteAdmin = ({\n  component: Component,\n  ...rest\n}) => {\n  useEffect(() => {\n    if (!authCheck.isAdmin()) {\n      NotificationManager.error('Samo admin može pristupiti ovoj stranici!');\n    }\n  });\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => localStorage.getItem('jwt') && authCheck.isAdmin() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 95\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/dashboard\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/privateRouteAdmin.jsx"],"names":["React","useEffect","Route","Redirect","NotificationManager","authCheck","PrivateRouteAdmin","component","Component","rest","isAdmin","error","props","localStorage","getItem","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAEpER,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACI,SAAS,CAACK,OAAV,EAAJ,EAAwB;AACpBN,MAAAA,mBAAmB,CAACO,KAApB,CAA0B,2CAA1B;AACH;AACF,GAJM,CAAT;AAKA,sBACA,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,IAAA,MAAM,EAAGG,KAAK,IAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA+BT,SAAS,CAACK,OAAV,EAA/B,gBAAuD,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvD,gBACxB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;AAKH,CAZM","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport * as authCheck from './authCheck.js';\r\n\r\nexport const PrivateRouteAdmin = ({ component: Component, ...rest }) => {\r\n\r\n    useEffect(() => {\r\n        if(!authCheck.isAdmin()){\r\n            NotificationManager.error('Samo admin može pristupiti ovoj stranici!');\r\n        }\r\n      });\r\n    return (\r\n    <Route {...rest} render={ props => localStorage.getItem('jwt') && authCheck.isAdmin() ? ( <Component {...props} />) : \r\n             ( <Redirect to={{ pathname: \"/dashboard\"}} />\r\n        )}/>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}