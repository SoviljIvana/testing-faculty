{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\TicketAction\\\\TicketDetails.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass TicketDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      payment: '',\n      userId: '',\n      exhibitionId: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getTicket(id);\n  }\n\n  getTicket(id) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/tickets/get/${id}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          ticketId: data.ticketId,\n          payment: data.payment + '',\n          userId: data.userId + '',\n          exhibitionId: data.exhibitionId + ''\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      ticketId,\n      payment,\n      userId,\n      exhibitionId\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 51\n      }\n    }, \"ID KARTE: \", ticketId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 51\n      }\n    }, \"PLACANJE: \", payment)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 51\n      }\n    }, \"ID KORISNIKA: \", userId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 51\n      }\n    }, \"IZLOZBA ID: \", exhibitionId)));\n  }\n\n}\n\nexport default withRouter(TicketDetails);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/TicketAction/TicketDetails.jsx"],"names":["React","withRouter","Container","FormText","NotificationManager","serviceConfig","TicketDetails","Component","constructor","props","state","id","payment","userId","exhibitionId","componentDidMount","match","params","getTicket","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","ticketId","catch","error","message","statusText","submitted","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container, FormText} from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig,  } from '../../AppSettings';\r\n\r\nclass TicketDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            payment: '',\r\n            userId: '',\r\n            exhibitionId: '',\r\n          \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.getTicket(id);\r\n    }\r\n    \r\n    getTicket(id) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n           \r\n        };\r\n        fetch(`${serviceConfig.baseURL}/api/tickets/get/${id}` , requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        ticketId: data.ticketId,\r\n                        payment: data.payment + '',\r\n                        userId: data.userId +'',\r\n                        exhibitionId: data.exhibitionId +'',\r\n                    });\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {ticketId, payment, userId, exhibitionId} = this.state;\r\n        return (\r\n            <Container>\r\n                <FormText className=\"text-danger\"><h3>ID KARTE: {ticketId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>PLACANJE: {payment}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>ID KORISNIKA: {userId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>IZLOZBA ID: {exhibitionId}</h3></FormText>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(TicketDetails);"]},"metadata":{},"sourceType":"module"}