{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\AuditoriumAction\\\\AuditoriumDetails.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass AuditoriumDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      museumId: '',\n      nameOfAuditorium: '',\n      numberOfSeats: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getAuditorium(id);\n  }\n\n  getAuditorium(id) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/auditoriums/get/${id}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          nameOfAuditorium: data.nameOfAuditorium,\n          numberOfSeats: data.numberOfSeats + '',\n          auditoriumId: data.auditoriumId + '',\n          museumId: data.museumId\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      auditoriumId,\n      museumId,\n      nameOfAuditorium,\n      numberOfSeats\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 51\n      }\n    }, \"Sala ID: \", auditoriumId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 51\n      }\n    }, \"Muzej ID: \", museumId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 51\n      }\n    }, \"Naziv sale: \", nameOfAuditorium)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 51\n      }\n    }, \"Broj sedi\\u0161ta: \", numberOfSeats)));\n  }\n\n}\n\nexport default withRouter(AuditoriumDetails);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/AuditoriumAction/AuditoriumDetails.jsx"],"names":["React","withRouter","Container","FormText","NotificationManager","serviceConfig","AuditoriumDetails","Component","constructor","props","state","id","museumId","nameOfAuditorium","numberOfSeats","componentDidMount","match","params","getAuditorium","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","auditoriumId","catch","error","message","statusText","submitted","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container, FormText} from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig,  } from '../../AppSettings';\r\n\r\nclass AuditoriumDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            museumId: '',\r\n            nameOfAuditorium: '',\r\n            numberOfSeats : [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.getAuditorium(id);\r\n    }\r\n    \r\n    getAuditorium(id) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n           \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        };\r\n        fetch(`${serviceConfig.baseURL}/api/auditoriums/get/${id}` , requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        nameOfAuditorium: data.nameOfAuditorium,\r\n                        numberOfSeats: data.numberOfSeats + '', \r\n                        auditoriumId: data.auditoriumId + '',\r\n                        museumId: data.museumId\r\n                    });\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {auditoriumId, museumId, nameOfAuditorium, numberOfSeats} = this.state;\r\n        return (\r\n            <Container>\r\n                <FormText className=\"text-danger\"><h3>Sala ID: {auditoriumId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>Muzej ID: {museumId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>Naziv sale: {nameOfAuditorium}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>Broj sedi≈°ta: {numberOfSeats}</h3></FormText>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(AuditoriumDetails);\r\n"]},"metadata":{},"sourceType":"module"}