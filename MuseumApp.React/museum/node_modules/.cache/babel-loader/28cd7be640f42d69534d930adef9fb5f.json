{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\ExhibitionActions\\\\ExhibitionDetails.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, CardDeck, Accordion, Jumbotron, Card, Button, ListGroup, ResponsiveEmbed, CardColumns } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\nimport Spinner from '../Spinner';\nimport * as Moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass ExhibitionDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      auditoriumId: '',\n      exhibitionName: '',\n      typeOfExhibition: '',\n      startTime: '',\n      endTime: '',\n      description: '',\n      picture: '',\n      exhibits: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getExhibition(id);\n  }\n\n  getExhibition(id) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/exhibitions/get/${id}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          exhibitionId: data.exhibitionId,\n          auditoriumId: data.auditoriumId,\n          exhibitionName: data.exhibitionName + '',\n          typeOfExhibition: data.typeOfExhibition + '',\n          startTime: data.startTime + '',\n          endTime: data.endTime + '',\n          description: data.description + '',\n          picture: data.picture + '',\n          exhibits: data.exhibits,\n          isLoading: false\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  getAllExhibits() {\n    return this.state.exhibits.map(exhibit => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"center1\",\n        style: {\n          width: '20rem'\n        },\n        className: \"text-center\",\n        key: exhibit.exhibitId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ResponsiveEmbed, {\n        aspectRatio: \"4by3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: exhibit.picturePath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, exhibit.name), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"Godina \", exhibit.year))));\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const exhibitDetails = this.getAllExhibits();\n    const exhibits = isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(Container, {\n      className: \"container-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 60\n      }\n    }, \" \", exhibitDetails, \" \");\n    const {\n      exhibitionName,\n      typeOfExhibition,\n      startTime,\n      endTime,\n      description,\n      picture\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, exhibitionName, \" \"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveEmbed, {\n      aspectRatio: \"4by3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: picture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"Saznaj nesto vi\\u0161e!\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, description))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, \"Pogledaj datum izlo\\u017Ebe!\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, \" \", Moment(startTime).format('LLL'), \" - \", Moment(endTime).format('LLL'), \" \")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \"Tema\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \" \", typeOfExhibition, \" \")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Lista eksponata!\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardDeck, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, exhibits))))));\n  }\n\n}\n\nexport default withRouter(ExhibitionDetails);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/ExhibitionActions/ExhibitionDetails.jsx"],"names":["React","withRouter","Container","CardDeck","Accordion","Jumbotron","Card","Button","ListGroup","ResponsiveEmbed","CardColumns","NotificationManager","serviceConfig","Spinner","Moment","ExhibitionDetails","Component","constructor","props","state","id","auditoriumId","exhibitionName","typeOfExhibition","startTime","endTime","description","picture","exhibits","componentDidMount","match","params","getExhibition","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","exhibitionId","isLoading","catch","error","message","statusText","submitted","getAllExhibits","map","exhibit","width","exhibitId","picturePath","name","year","render","exhibitDetails","format"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container, CardDeck,Accordion, Jumbotron, Card, Button, ListGroup, ResponsiveEmbed, CardColumns } from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig, } from '../../AppSettings';\r\nimport Spinner from '../Spinner'\r\nimport * as Moment from 'moment';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nclass ExhibitionDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            auditoriumId: '',\r\n            exhibitionName: '',\r\n            typeOfExhibition: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            description: '',\r\n            picture: '',\r\n            exhibits: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.getExhibition(id);\r\n    }\r\n\r\n    getExhibition(id) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        };\r\n        fetch(`${serviceConfig.baseURL}/api/exhibitions/get/${id}`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n\r\n                if (data) {\r\n                    this.setState({\r\n                        exhibitionId: data.exhibitionId,\r\n                        auditoriumId: data.auditoriumId,\r\n                        exhibitionName: data.exhibitionName + '',\r\n                        typeOfExhibition: data.typeOfExhibition + '',\r\n                        startTime: data.startTime + '',\r\n                        endTime: data.endTime + '',\r\n                        description: data.description + '',\r\n\r\n                        picture: data.picture + '',\r\n                        exhibits: data.exhibits,\r\n                        isLoading: false,\r\n                    });\r\n\r\n                }\r\n\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n    getAllExhibits() {\r\n\r\n        return this.state.exhibits.map(exhibit => {\r\n            return <Card className=\"center1\" style={{ width: '20rem' }} className=\"text-center\" key={exhibit.exhibitId}>\r\n                <Container>\r\n                    <div className=\"inner\">\r\n                        <ResponsiveEmbed aspectRatio=\"4by3\">\r\n                            <Card.Img variant=\"top\" src={exhibit.picturePath} />\r\n                        </ResponsiveEmbed>\r\n                    </div>\r\n                </Container>\r\n                <Card.Body>\r\n                <Container >\r\n                        <h6>{exhibit.name}</h6>\r\n                        <h6>Godina {exhibit.year}</h6>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const exhibitDetails = this.getAllExhibits();\r\n        const exhibits = isLoading ? <Spinner></Spinner> : <Container className=\"container-cards\"> {exhibitDetails} </Container>;\r\n        const { exhibitionName, typeOfExhibition, startTime, endTime, description, picture } = this.state;\r\n        return (\r\n            <Container>\r\n                <Jumbotron>\r\n                    <h3 >{exhibitionName} </h3>\r\n                    <Container>\r\n                        <div className=\"inner\">\r\n                            <ResponsiveEmbed aspectRatio=\"4by3\">\r\n                                <Card.Img variant=\"top\" src={picture} />\r\n                            </ResponsiveEmbed>\r\n                        </div>\r\n                    </Container>\r\n                    <hr>\r\n                        </hr>\r\n                    <Accordion defaultActiveKey=\"1\">\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                    Saznaj nesto više!\r\n                                </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>{description}</Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>\r\n                        <hr>\r\n                        </hr>\r\n                        <Accordion defaultActiveKey=\"1\">\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                   Pogledaj datum izložbe!\r\n                                </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>    \r\n                                    <h3 > {Moment(startTime).format('LLL')} - {Moment(endTime).format('LLL')} </h3>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>\r\n                        <hr>\r\n                        </hr>\r\n                        <Accordion defaultActiveKey=\"1\">\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                   Tema \r\n                                </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>    \r\n                                <h3 > {typeOfExhibition} </h3>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>\r\n                        <hr>\r\n                        </hr>\r\n                        <Accordion defaultActiveKey=\"1\">\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                   Lista eksponata! \r\n                                </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>    \r\n                                <CardDeck>\r\n                            {exhibits}\r\n                        </CardDeck>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>\r\n                </Jumbotron>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(ExhibitionDetails);"]},"metadata":{},"sourceType":"module"}