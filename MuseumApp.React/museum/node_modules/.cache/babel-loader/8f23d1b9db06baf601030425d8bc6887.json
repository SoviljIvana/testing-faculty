{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\AuditoriumAction\\\\EditAuditorium.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass EditAuditorium extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfSeats: 0,\n      nameOfAuditorium: '',\n      auditoriumId: 0,\n      museumId: '',\n      submitted: false,\n      canSubmit: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getAuditorium(id);\n  }\n\n  getAuditorium(auditoriumId) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/auditoriums/get/` + auditoriumId, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          nameOfAuditorium: data.nameOfAuditorium,\n          numberOfSeats: data.numberOfSeats,\n          museumId: data.museumId,\n          auditoriumId: data.auditoriumId,\n          id: data.id\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  handleChange(e) {\n    const {\n      id,\n      value\n    } = e.target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      auditoriumId,\n      museumId,\n      nameOfAuditorium,\n      numberOfSeats\n    } = this.state;\n\n    if (auditoriumId && museumId && nameOfAuditorium && numberOfSeats) {\n      this.updateAuditorium();\n    } else {\n      NotificationManager.error('Molim vas popunite polje.');\n      this.setState({\n        submitted: false\n      });\n    }\n  }\n\n  updateAuditorium() {\n    const {\n      auditoriumId,\n      museumId,\n      nameOfAuditorium,\n      numberOfSeats\n    } = this.state;\n    const data = {\n      auditoriumId: auditoriumId,\n      museumId: museumId,\n      nameOfAuditorium: nameOfAuditorium,\n      numberOfSeats: +numberOfSeats\n    };\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\n    fetch(`${serviceConfig.baseURL}/api/auditoriums/put/${auditoriumId}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.statusText;\n    }).then(data => {\n      if (data) {\n        this.setState({\n          nameOfAuditorium: data.nameOfAuditorium,\n          numberOfSeats: data.numberOfSeats\n        });\n      }\n    }).then(result => {\n      this.props.history.goBack();\n      NotificationManager.success('Uspešno izmenjena sala!');\n    }).catch(response => {\n      NotificationManager.error(\"Ne možete izmeniti salu.\");\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      nameOfAuditorium,\n      numberOfSeats,\n      canSubmit,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"nameOfAuditorium\",\n      type: \"text\",\n      placeholder: \"naziv sale\",\n      value: nameOfAuditorium,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"numberOfSeats\",\n      type: \"number\",\n      placeholder: \"broj sedi\\u0161ta\",\n      value: numberOfSeats,\n      onChange: this.handleChange,\n      max: \"36\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      disabled: submitted || !canSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, \"Izmena sale\")))));\n  }\n\n}\n\nexport default withRouter(EditAuditorium);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/AuditoriumAction/EditAuditorium.jsx"],"names":["React","withRouter","FormGroup","FormControl","Button","Container","Row","Col","FormText","NotificationManager","serviceConfig","EditAuditorium","Component","constructor","props","state","numberOfSeats","nameOfAuditorium","auditoriumId","museumId","submitted","canSubmit","handleChange","bind","handleSubmit","componentDidMount","id","match","params","getAuditorium","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","catch","error","message","statusText","e","value","target","preventDefault","updateAuditorium","body","JSON","stringify","console","log","result","history","goBack","success","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText, } from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\n\r\nclass EditAuditorium extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numberOfSeats: 0,\r\n            nameOfAuditorium: '',\r\n            auditoriumId: 0,\r\n            museumId: '',            \r\n            submitted: false,\r\n            canSubmit: true\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params; \r\n        this.getAuditorium(id);\r\n    }\r\n    getAuditorium(auditoriumId) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n           \r\n        };\r\n    \r\n        fetch(`${serviceConfig.baseURL}/api/auditoriums/get/` + auditoriumId, requestOptions)\r\n            .then(response => {\r\n            if (!response.ok) {\r\n                return Promise.reject(response);\r\n            }\r\n            return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({nameOfAuditorium: data.nameOfAuditorium,\r\n                        numberOfSeats: data.numberOfSeats,\r\n                        museumId: data.museumId,\r\n                        auditoriumId: data.auditoriumId,\r\n                        id: data.id});\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n        }\r\n    handleChange(e) {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n      \r\n            }\r\n\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const {auditoriumId, museumId, nameOfAuditorium, numberOfSeats} = this.state;\r\n        if (auditoriumId && museumId && nameOfAuditorium && numberOfSeats) {\r\n            this.updateAuditorium();\r\n        } else {\r\n            NotificationManager.error('Molim vas popunite polje.');\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n \r\n    updateAuditorium() {\r\n\r\n        const { auditoriumId, museumId, nameOfAuditorium, numberOfSeats} = this.state;\r\n        const data = {\r\n            auditoriumId: auditoriumId,\r\n            museumId: museumId,\r\n            nameOfAuditorium: nameOfAuditorium, \r\n            numberOfSeats: +numberOfSeats\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\r\n        \r\n        fetch(`${serviceConfig.baseURL}/api/auditoriums/put/${auditoriumId}`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.statusText;\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    this.setState({\r\n                        nameOfAuditorium : data.nameOfAuditorium,\r\n                        numberOfSeats: data.numberOfSeats\r\n                    });\r\n                }\r\n            })\r\n            .then(result => {\r\n                this.props.history.goBack();\r\n                NotificationManager.success('Uspešno izmenjena sala!');\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(\"Ne možete izmeniti salu.\");\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {nameOfAuditorium, numberOfSeats, canSubmit , submitted} = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                        \r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"nameOfAuditorium\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"naziv sale\"\r\n                                    value={nameOfAuditorium}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"numberOfSeats\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"broj sedišta\"\r\n                                    value={numberOfSeats}\r\n                                    onChange={this.handleChange}\r\n                                    max=\"36\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button  variant=\"danger\" type=\"submit\" disabled={submitted || !canSubmit} block>Izmena sale</Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(EditAuditorium);"]},"metadata":{},"sourceType":"module"}