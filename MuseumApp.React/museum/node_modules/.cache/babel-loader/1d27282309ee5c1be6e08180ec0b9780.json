{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\TicketAction\\\\ShowAllTickets.jsx\";\nimport React, { Component } from 'react';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\nimport { Row, Table, Button } from 'react-bootstrap';\nimport Spinner from '../Spinner';\n\nclass ShowAllTickets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickets: [],\n      isLoading: true\n    };\n    this.ticketDetails = this.ticketDetails.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTickets();\n  }\n\n  getTickets() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    this.setState({\n      isLoading: true\n    });\n    fetch(`${serviceConfig.baseURL}/api/Tickets/get`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          tickets: data,\n          isLoading: false\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  fillTableWithDaata() {\n    return this.state.tickets.map(ticket => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: ticket.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, ticket.payment), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, ticket.userId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        width: \"1%\",\n        className: \"text-center cursor-pointer\",\n        onClick: () => this.ticketDetails(ticket.ticketId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, \"vidi detalje\")));\n    });\n  }\n\n  ticketDetails(id) {\n    this.props.history.push(`ticketDetails/${id}`);\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const rowsData = this.fillTableWithDaata();\n    const table = /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      striped: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Pla\\u0107anje\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Detalji\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, rowsData));\n    const showTable = isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }\n    }) : table;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, showTable));\n  }\n\n}\n\nexport default ShowAllTickets;","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/TicketAction/ShowAllTickets.jsx"],"names":["React","Component","NotificationManager","serviceConfig","Row","Table","Button","Spinner","ShowAllTickets","constructor","props","state","tickets","isLoading","ticketDetails","bind","componentDidMount","getTickets","requestOptions","method","headers","localStorage","getItem","setState","fetch","baseURL","then","response","ok","Promise","reject","json","data","catch","error","message","statusText","fillTableWithDaata","map","ticket","id","payment","userId","ticketId","history","push","render","rowsData","table","showTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\nimport { Row, Table, Button } from 'react-bootstrap';\r\nimport Spinner from '../Spinner';\r\n\r\nclass ShowAllTickets extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tickets: [],\r\n            isLoading: true,\r\n        }\r\n        this.ticketDetails = this.ticketDetails.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTickets();\r\n    }\r\n\r\n    getTickets(){\r\n        const requestOptions = {\r\n            method: 'GET' ,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n           };\r\n            this.setState({isLoading: true});\r\n            fetch(`${serviceConfig.baseURL}/api/Tickets/get`, requestOptions)\r\n              .then(response => {\r\n                if (!response.ok) {\r\n                  return Promise.reject(response);\r\n              }\r\n              return response.json();\r\n              })\r\n              .then(data => {\r\n                if (data) {\r\n                  this.setState({ \r\n                      tickets: data,\r\n                       isLoading: false });\r\n                  }\r\n              })\r\n              .catch(response => {\r\n                  NotificationManager.error(response.message || response.statusText);\r\n                  this.setState({ isLoading: false });\r\n              });\r\n    }\r\n\r\n  \r\n    fillTableWithDaata() {\r\n        return this.state.tickets.map(ticket => {\r\n            return <tr key={ticket.id}>\r\n                <td>{ticket.payment}</td>\r\n                <td>{ticket.userId}</td>  \r\n                <td>  <Button variant=\"dark\"  width = \"1%\" className=\"text-center cursor-pointer\" onClick = {() => this.ticketDetails(ticket.ticketId) }>vidi detalje</Button></td> \r\n            \r\n</tr>\r\n    \r\n    })\r\n    }\r\n\r\n    ticketDetails(id){\r\n        this.props.history.push(`ticketDetails/${id}`);\r\n    }\r\n\r\n    render(){\r\n        const {isLoading} = this.state;\r\n        const rowsData = this.fillTableWithDaata();\r\n        const table = (<Table striped bordered hover responsive striped variant=\"dark\">\r\n                            <thead>\r\n                            <th>Plaćanje</th>\r\n                            <th>Id</th>\r\n                            <th>Detalji</th>\r\n                           \r\n                            </thead>\r\n                            <tbody>\r\n                                {rowsData}\r\n                            </tbody>\r\n                        </Table>);\r\n        const showTable = isLoading ? <Spinner></Spinner> : table;\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    {showTable}\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ShowAllTickets;"]},"metadata":{},"sourceType":"module"}