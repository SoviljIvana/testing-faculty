{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\ExhibitActions\\\\ExhibitDetails.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass ExhibitDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name: '',\n      year: '',\n      picturePath: '',\n      auditoriumId: '',\n      exhibitionId: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getExhibit(id);\n  }\n\n  getExhibit(id) {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    };\n    fetch(`${serviceConfig.baseURL}/api/exhibits/get/${id}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          exhibitId: data.exhibitId,\n          name: data.name + '',\n          year: data.year + '',\n          picturePath: data.picturePath + '',\n          auditoriumId: data.auditoriumId,\n          exhibitionId: data.exhibitionId\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      exhibitId,\n      name,\n      year,\n      picturePath,\n      auditoriumId,\n      exhibitionId\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 51\n      }\n    }, \"IZLO\\u017DBA ID: \", exhibitId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 51\n      }\n    }, \"IME: \", name)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 51\n      }\n    }, \"GODINA: \", year)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 51\n      }\n    }, \"SLIKA: \", picturePath)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 51\n      }\n    }, \"SALA ID: \", auditoriumId)), /*#__PURE__*/React.createElement(FormText, {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 51\n      }\n    }, \"IZLO\\u017DBA ID: \", exhibitionId)));\n  }\n\n}\n\nexport default withRouter(ExhibitDetails);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/ExhibitActions/ExhibitDetails.jsx"],"names":["React","withRouter","Container","FormText","NotificationManager","serviceConfig","ExhibitDetails","Component","constructor","props","state","id","name","year","picturePath","auditoriumId","exhibitionId","componentDidMount","match","params","getExhibit","requestOptions","method","headers","localStorage","getItem","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","exhibitId","catch","error","message","statusText","submitted","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container, FormText} from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig,  } from '../../AppSettings';\r\n\r\nclass ExhibitDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            year: '',\r\n            picturePath : '',\r\n            auditoriumId : '',\r\n            exhibitionId : ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.getExhibit(id);\r\n    }\r\n    \r\n    getExhibit(id) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n       \r\n        };\r\n        fetch(`${serviceConfig.baseURL}/api/exhibits/get/${id}` , requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        exhibitId: data.exhibitId,\r\n                        name: data.name + '', \r\n                        year: data.year + '',\r\n                        picturePath: data.picturePath + '',\r\n                        auditoriumId : data.auditoriumId ,\r\n                        exhibitionId : data.exhibitionId,\r\n                    });\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {exhibitId, name, year, picturePath, auditoriumId, exhibitionId} = this.state;\r\n        return (\r\n            <Container>\r\n                <FormText className=\"text-danger\"><h3>IZLOŽBA ID: {exhibitId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>IME: {name}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>GODINA: {year}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>SLIKA: {picturePath}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>SALA ID: {auditoriumId}</h3></FormText>\r\n                <FormText className=\"text-danger\"><h3>IZLOŽBA ID: {exhibitionId}</h3></FormText>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(ExhibitDetails);"]},"metadata":{},"sourceType":"module"}