{"ast":null,"code":"var _jsxFileName = \"C:\\\\MuseumAPP\\\\museum project- faks\\\\MuseumApp\\\\MuseumApp.React\\\\museum\\\\src\\\\components\\\\ExhibitionAction\\\\EditExhibition.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText } from 'react-bootstrap';\nimport { NotificationManager } from 'react-notifications';\nimport { serviceConfig } from '../../AppSettings';\n\nclass EditExhibition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: '',\n      endTime: '',\n      typeOfExhibition: '',\n      exhibitionName: '',\n      exhibitionId: 0,\n      auditoriumId: 0,\n      submitted: false,\n      canSubmit: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getExhibition(id);\n  }\n\n  getExhibition(exhibitionId) {\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch(`${serviceConfig.baseURL}/api/exhibitions/get/` + exhibitionId, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data) {\n        this.setState({\n          typeOfExhibition: data.typeOfExhibition,\n          exhibitionName: data.exhibitionName,\n          exhibitionId: data.exhibitionId,\n          auditoriumId: data.auditoriumId,\n          startTime: data.startTime,\n          endTime: data.endTime,\n          id: data.id\n        });\n      }\n    }).catch(response => {\n      NotificationManager.error(response.message || response.statusText);\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  handleChange(e) {\n    const {\n      id,\n      value\n    } = e.target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      auditoriumId,\n      exhibitionId,\n      exhibitionName,\n      typeOfExhibition,\n      startTime,\n      endTime\n    } = this.state;\n\n    if (auditoriumId && exhibitionId && exhibitionName && typeOfExhibition && startTime && endTime) {\n      this.updateExhibition();\n    } else {\n      NotificationManager.error('Molim vas unesite podatak.');\n      this.setState({\n        submitted: false\n      });\n    }\n  }\n\n  updateExhibition() {\n    const {\n      auditoriumId,\n      exhibitionId,\n      exhibitionName,\n      typeOfExhibition,\n      startTime,\n      endTime\n    } = this.state;\n    const data = {\n      auditoriumId: auditoriumId,\n      exhibitionId: exhibitionId,\n      exhibitionName: exhibitionName,\n      typeOfExhibition: typeOfExhibition,\n      startTime: startTime,\n      endTime: endTime\n    };\n    const requestOptions = {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    };\n    console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\n    fetch(`${serviceConfig.baseURL}/api/exhibitions/${exhibitionId}`, requestOptions).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.statusText;\n    }).then(data => {\n      if (data) {\n        this.setState({\n          exhibitionName: data.exhibitionName,\n          typeOfExhibition: data.typeOfExhibition,\n          startTime: data.startTime,\n          endTime: data.endTime\n        });\n      }\n    }).then(result => {\n      this.props.history.goBack();\n      NotificationManager.success('Uspešno izmenjena izložba!');\n    }).catch(response => {\n      NotificationManager.error(\"Ne možete izmeniti izložbu. \");\n      this.setState({\n        submitted: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      exhibitionName,\n      typeOfExhibition,\n      startTime,\n      endTime,\n      canSubmit,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"exhibitionName\",\n      type: \"text\",\n      placeholder: \"naziv izlo\\u017Ebe\",\n      value: exhibitionName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"typeOfExhibition\",\n      type: \"text\",\n      placeholder: \"tip izlo\\u017Ee\",\n      value: typeOfExhibition,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"startTime\",\n      type: \"text\",\n      placeholder: \"po\\u010Detak\",\n      value: startTime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      id: \"endTime\",\n      type: \"text\",\n      placeholder: \"kraj\",\n      value: endTime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      disabled: submitted || !canSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"Izmena izlo\\u017Ebe\")))));\n  }\n\n}\n\nexport default withRouter(EditExhibition);","map":{"version":3,"sources":["C:/MuseumAPP/museum project- faks/MuseumApp/MuseumApp.React/museum/src/components/ExhibitionAction/EditExhibition.jsx"],"names":["React","withRouter","FormGroup","FormControl","Button","Container","Row","Col","FormText","NotificationManager","serviceConfig","EditExhibition","Component","constructor","props","state","startTime","endTime","typeOfExhibition","exhibitionName","exhibitionId","auditoriumId","submitted","canSubmit","handleChange","bind","handleSubmit","componentDidMount","id","match","params","getExhibition","requestOptions","method","fetch","baseURL","then","response","ok","Promise","reject","json","data","setState","catch","error","message","statusText","e","value","target","preventDefault","updateExhibition","body","JSON","stringify","console","log","result","history","goBack","success","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button, Container, Row, Col, FormText, } from 'react-bootstrap';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { serviceConfig } from '../../AppSettings';\r\n\r\nclass EditExhibition extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            startTime: '',\r\n            endTime: '',\r\n            typeOfExhibition: '',\r\n            exhibitionName: '',\r\n            exhibitionId: 0,\r\n            auditoriumId: 0,            \r\n            submitted: false,\r\n            canSubmit: true\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params; \r\n        this.getExhibition(id);\r\n    }\r\n    getExhibition(exhibitionId) {\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        };\r\n    \r\n        fetch(`${serviceConfig.baseURL}/api/exhibitions/get/` + exhibitionId, requestOptions)\r\n            .then(response => {\r\n            if (!response.ok) {\r\n                return Promise.reject(response);\r\n            }\r\n            return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({typeOfExhibition: data.typeOfExhibition,\r\n                        exhibitionName: data.exhibitionName,\r\n                        exhibitionId: data.exhibitionId,\r\n                        auditoriumId: data.auditoriumId,\r\n                        startTime: data.startTime,\r\n                        endTime: data.endTime,\r\n                        id: data.id});\r\n                }\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(response.message || response.statusText);\r\n                this.setState({ submitted: false });\r\n            });\r\n        }\r\n    handleChange(e) {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n      \r\n            }\r\n\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const {auditoriumId, exhibitionId, exhibitionName, typeOfExhibition, startTime, endTime} = this.state;\r\n        if (auditoriumId && exhibitionId && exhibitionName && typeOfExhibition && startTime && endTime) {\r\n            this.updateExhibition();\r\n        } else {\r\n            NotificationManager.error('Molim vas unesite podatak.');\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n \r\n    updateExhibition() {\r\n\r\n        const { auditoriumId, exhibitionId, exhibitionName, typeOfExhibition, startTime, endTime} = this.state;\r\n        const data = {\r\n            auditoriumId: auditoriumId,\r\n            exhibitionId: exhibitionId,\r\n            exhibitionName: exhibitionName, \r\n            typeOfExhibition: typeOfExhibition,\r\n            startTime:startTime,\r\n            endTime: endTime\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            \r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        console.log(JSON.stringify(\"REQ_OPT:\" + requestOptions.body));\r\n        \r\n        fetch(`${serviceConfig.baseURL}/api/exhibitions/${exhibitionId}`, requestOptions)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                }\r\n                return response.statusText;\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    this.setState({\r\n                        exhibitionName : data.exhibitionName,\r\n                        typeOfExhibition: data.typeOfExhibition,\r\n                        startTime: data.startTime,\r\n                        endTime: data.endTime\r\n                    });\r\n                }\r\n            })\r\n            .then(result => {\r\n                this.props.history.goBack();\r\n                NotificationManager.success('Uspešno izmenjena izložba!');\r\n            })\r\n            .catch(response => {\r\n                NotificationManager.error(\"Ne možete izmeniti izložbu. \");\r\n                this.setState({ submitted: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {exhibitionName, typeOfExhibition, startTime, endTime, canSubmit , submitted} = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                        \r\n                            <FormGroup>\r\n                                <FormControl\r\n                                \r\n                                    id=\"exhibitionName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"naziv izložbe\"\r\n                                    value={exhibitionName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                \r\n                                    id=\"typeOfExhibition\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"tip izlože\"\r\n                                    value={typeOfExhibition}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"startTime\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"početak\"\r\n                                    value={startTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    id=\"endTime\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"kraj\"\r\n                                    value={endTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button  variant=\"danger\" type=\"submit\" disabled={submitted || !canSubmit} block>Izmena izložbe</Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(EditExhibition);"]},"metadata":{},"sourceType":"module"}